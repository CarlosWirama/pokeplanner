{"version":3,"sources":["common/components/LayoutContainer.js","common/components/Navbar.js","common/components/TextInput.js","common/utilities/filter.js","common/components/AutoCompleteInput/AutoCompleteInputLayout.js","common/components/AutoCompleteInput/index.js","pages/Home.js","api/apiHelper.js","api/getPokemons/index.js","api/getPokemonDetail/getPokemonDetail.js","pages/Search/SearchInput.js","pages/Search/SearchPageLayout.jsx","common/components/Types/Types.styled.js","common/components/Types/pokemonTypeColor.js","common/components/Types/Types.jsx","common/components/PokemonInfo/PokemonInfo.styled.js","common/components/PokemonInfo/spriteApi.js","common/components/PokemonInfo/PokemonInfo.jsx","common/components/Card.js","pages/Search/SearchResultItem.styled.js","pages/Search/SearchResultItem.js","pages/Search/SearchResultList.jsx","pages/Search/EmptyState.jsx","pages/Search/index.js","pages/Detail/Learnset.styled.js","pages/Detail/Learnset.js","pages/Detail/DetailPageLayout.js","pages/Detail/DetailPageContainer.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","_templateObject","Navbar","_ref","left","children","right","onClickBack","leftButton","react_default","a","createElement","BackButton","onClick","styledChildren","index_es","variant","color","NavbarContainer","EmptySpace","StyledToolbar","FullWidth","Navbar_templateObject","_templateObject2","_templateObject3","Toolbar","_templateObject4","props","Object","assign","aria-label","icons_index_es","TextInput","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","defineProperty","name","defaultValue","inputRef","focus","onChange","bind","assertThisInitialized","onKeyDown","clear","_ref$target","target","value","setState","e","keyCode","onSubmit","_this$props","onClear","_this2","_this$props2","restProps","objectWithoutProperties","autoComplete","React","Component","defaultProps","filterAutocomplete","list","rawInput","arguments","length","undefined","isShowingAllByDefault","getItemValue","defaultResult","input","trim","toLowerCase","replace","filter","item","includes","renderInputComponent","_ref$inputRef","ref","other","fullWidth","node","AutoSuggestRenderSuggestionComponent","_ref2","parts","isHighlighted","text","selected","component","map","part","index","highlight","key","String","style","fontWeight","AutoSuggestRenderSuggestionContainerComponent","_ref3","anchorEl","containerProps","open","Boolean","StyledPaper","square","listStyleType","width","clientWidth","root","Paper","AutoCompleteInputLayout_templateObject","Section","title","desc","SectionStyle","PartyArea","Link","to","Home_templateObject","Home_templateObject2","LayoutContainer","Home_templateObject3","DOMAIN","DEFAULT_PARAMS","origin","action","format","redirects","fetchAndParseWiki","_x","_fetchAndParseWiki","apply","_callee","params","wikitext","regenerator_default","wrap","_context","prev","next","fetchWiki","objectSpread","prop","sent","wtf","abrupt","stop","_callee2","queryParams","url","response","_context2","buildQueryParams","concat","fetch","then","r","json","parse","buildKeyValueQueryFromObject","obj","keys","toConsumableArray","join","POKEMON_LIST_PAGE","wikitextResult","page","sections","i","depth","section","_title","templates","template","_ref2$list","toArray","kantoDex","nDex","types","slice","isAlolan","parsed","summarySection","type1","type2","form2type1","form2type2","learnsetSection","learnset","infoboxes","lv100exp","ability1","indexOf","SearchInput","isFocused","textInput","onFocus","onBlur","Container","StyledTextInput","placeholder","StyledIconButton","SearchInput_templateObject","SearchInput_templateObject2","IconButton","SearchInput_templateObject3","SearchPageLayout","SearchInput_SearchInput","searchResultContent","Types_styled_templateObject","TypeBaloon","Types_styled_templateObject2","getTypeColor","type","Types","Types_styled_Container","PokemonInfo_styled_templateObject","SpriteContainer","PokemonInfo_styled_templateObject2","PokemonSprite","img","PokemonInfo_styled_templateObject3","Texts","PokemonInfo_styled_templateObject4","Name","_templateObject5","titleColor","getImageUrl","pokemonName","spriteType","PokemonInfo","PokemonInfo_styled_Container","src","ButtonBase","Card_templateObject","ResultItem","Card","SearchResultItem_styled_templateObject","SearchResultItem","_ref$listItem","listItem","SearchResultList","StyledList","filteredList","onClickItem","List","SearchResultList_templateObject","EmptyState","SearchPage","pokemonList","searchText","isLoading","_getPokemons","getPokemons","catch","message","console","error","finally","history","push","selectedPokemon","getResultItemName","resultItem","_this3","_this$state","MoveSetTab","Learnset_styled_templateObject","Learnset_styled_templateObject2","Move","Learnset_styled_templateObject3","lighten","Header","Learnset_styled_templateObject4","Level","Learnset_styled_templateObject5","_templateObject6","Collapse","CollapseMaterialUi","_templateObject7","ShowDetails","ExpandMore","_templateObject8","isExpanded","_templateObject9","ExpandIconContainer","_templateObject10","Learnset","react","LearnsetItem","encodeDash","string","_useState","useState","_useState2","slicedToArray","setIsExpanded","_list","level","moveName","category","power","accuracy","pp","Learnset_styled_Container","Learnset_styled_Name","ExpandMore_default","Learnset_styled_Collapse","in","timeout","unmountOnExit","DetailPageLayout","DetailPageContainer","match","setLearnset","_useState3","_useState4","setTypes","pokemon","useEffect","_getPokemonDetail","getPokemonDetail","alolanSeparatorIndex","nameForAlolan","substr","NotFound","Body","App_templateObject","window","location","hostname","ReactDOM","render","BrowserRouter","Switch","Route","path","Search","Detail","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd36a157.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n  margin: 16px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\n\nexport default function Navbar({ left, children, right, onClickBack }) {\n  const leftButton = left || (\n    onClickBack ? <BackButton onClick={onClickBack} /> : null\n  );\n  const styledChildren = typeof children !== 'string'\n    ? children // if typeof children === component\n    : <Typography variant=\"h2\" color=\"inherit\">{children}</Typography>;\n  return (\n    <NavbarContainer>\n      <EmptySpace/>\n      <AppBar color=\"inherit\">\n        <StyledToolbar>\n          {leftButton}\n          <FullWidth>{styledChildren}</FullWidth>\n          {right}\n        </StyledToolbar>\n      </AppBar>\n    </NavbarContainer>\n  );\n}\n\nNavbar.propTypes = {\n  left: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]),\n  children: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]).isRequired,\n  right: PropTypes.oneOfType([ PropTypes.string, PropTypes.node ]),\n  onClickBack: PropTypes.func,\n};\n\nconst FullWidth = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst EmptySpace = styled.div`\n  height: calc(110px - 16px);\n`;\n\nconst NavbarContainer = styled.div`\n  && {\n    color: black;\n    font-weight: bold;\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  background-color: #4eedfa;\n  padding: 16px;\n  font-size: 20px;\n`;\n\nfunction BackButton(props) {\n  return(\n    <IconButton color=\"inherit\" aria-label=\"Back\" {...props} >\n      <ArrowBack />\n    </IconButton>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputBase } from '@material-ui/core';\n\nexport default class TextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      [props.name]: props.defaultValue,\n    };\n    this.inputRef = { focus: () => {} };\n    this.onChange = this.onChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.focus = this.focus.bind(this);\n    this.clear = this.clear.bind(this);\n  }\n\n  onChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n    this.props.onChange(value);\n  }\n\n  onKeyDown(e) {\n    // if the user key-down an Enter key\n    if(e.keyCode === 13) {\n      this.props.onSubmit(this.state[this.props.name]);\n    }\n  }\n\n  focus() {\n    // don't simplify this assignment\n    // due to js variable value & reference behavior\n    this.inputRef.focus();\n  }\n\n  clear() {\n    const { name, onChange, onClear } = this.props;\n    this.setState({ [name]: '' });\n    onClear ? onClear() : onChange('');\n    this.focus();\n  }\n\n  render() {\n    // exclude these props to prevent it applied on the actual <input/>\n    const { defaultValue, onClear, ...restProps } = this.props;\n    return (\n      <InputBase\n        inputRef={e => (this.inputRef = e)}\n        value={this.state[this.props.name]}\n        autoComplete=\"off\"\n        onKeyDown={this.onKeyDown}\n        {...restProps}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  defaultValue: PropTypes.string,\n};\n\nTextInput.defaultProps = {\n  onSubmit: () => {},\n  onChange: () => {},\n  defaultValue: '',\n};\n","// filter list by comparing input\nexport function filterAutocomplete(\n  list,\n  rawInput = '',\n  isShowingAllByDefault = false,\n  getItemValue = e => e // should return string\n) {\n  const defaultResult = isShowingAllByDefault ? list : [];\n  const input = rawInput\n    .trim()\n    .toLowerCase()\n    .replace('_',' ');\n    // prevents alolan to be searchable by _\n  return input.length === 0\n    ? defaultResult\n    : list.filter(\n      item => getItemValue(item).toLowerCase().includes(input)\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { InputBase, MenuItem, Popper, Paper } from '@material-ui/core';\n\nexport function renderInputComponent({ inputRef = () => {}, ref, ...other }) {\n  return (\n    <InputBase\n      fullWidth\n      inputRef={ node => {\n        ref(node);\n        inputRef(node);\n      }}\n      {...other}\n    />\n  );\n}\n\nexport function AutoSuggestRenderSuggestionComponent({\n  parts, isHighlighted, onClick, text,\n}) {\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\" onClick={() => onClick(text)}>\n      {parts.map((part, index) =>\n        part.highlight ? (\n          <span key={String(index)} style={{ fontWeight: 500 }}>\n            {part.text}\n          </span>\n        ) : (\n          <strong key={String(index)} style={{ fontWeight: 300 }}>\n            {part.text}\n          </strong>\n        ),\n      )}\n    </MenuItem>\n  );\n}\n\nexport function AutoSuggestRenderSuggestionContainerComponent({\n  anchorEl, children, containerProps,\n}) {\n  return (\n    <Popper anchorEl={anchorEl} open={Boolean(children)}>\n      <StyledPaper\n        square\n        {...containerProps}\n        style={{listStyleType: 'none' , width: anchorEl ? anchorEl.clientWidth : null }}\n        root={{listStyleType: 'none'}}\n      >\n        {children}\n      </StyledPaper>\n    </Popper>\n  );\n}\n\nconst StyledPaper = styled(Paper)`\n  .react-autosuggest__suggestions-list {\n    list-style: none;\n    padding: 0;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport { match, parse } from 'autosuggest-highlight/parse';\nimport { filterAutocomplete } from '../../utilities/filter';\nimport {\n  renderInputComponent,\n  AutoSuggestRenderSuggestionComponent,\n  AutoSuggestRenderSuggestionContainerComponent,\n} from './AutoCompleteInputLayout';\n\nexport default class AutoCompleteInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.renderSuggestion = this.renderSuggestion.bind(this);\n  }\n\n  onChange(e) {\n    const { value, name } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  onKeyDown(e) {\n    // if the user key-down an Enter key\n    if(e.keyCode === 13) {\n      this.props.onSubmit(this.state.searchText);\n    }\n  }\n\n  getSuggestionValue(suggestion) {\n    return suggestion.name;\n  }\n\n  renderSuggestion(suggestion, { query, isHighlighted }) {\n    const text = this.getSuggestionValue(suggestion);\n    const matches = match(text, query);\n    const parts = parse(text, matches);\n    return (\n      <AutoSuggestRenderSuggestionComponent\n        text={text}\n        parts={parts}\n        isHighlighted={isHighlighted}\n        onClick={this.props.onSubmit}\n      />\n    );\n  }\n\n  render() {\n    const { searchText } = this.state;\n    const { suggestions, value } = this.props;\n    return (\n      <Autosuggest\n        // since theres no other props, i put the filter here\n        // and will be recalculated in every render\n        suggestions={filterAutocomplete(\n          suggestions, searchText, false, this.getSuggestionValue\n        )}\n        onSuggestionsFetchRequested={() => {}}\n        onSuggestionsClearRequested={() => {}}\n        getSuggestionValue={this.getSuggestionValue}\n        renderInputComponent={renderInputComponent}\n        renderSuggestion={this.renderSuggestion}\n        inputProps={{\n          ...this.props,\n          name: 'searchText',\n          value: value || searchText,\n          onChange: this.onChange,\n          onKeyDown: this.onKeyDown,\n          inputRef: node => {\n            this.popperNode = node;\n          },\n        }}\n        renderSuggestionsContainer={props =>\n          <AutoSuggestRenderSuggestionContainerComponent\n            anchorEl={this.popperNode}\n            {...props}\n          />\n        }\n      />\n    );\n  }\n}\n\nAutoCompleteInput.propTypes = {\n  suggestions: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Navbar } from '../common/components';\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // searchText: '',\n      // learnset: [],\n    };\n    // this.onChange = this.onChange.bind(this);\n    // this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  render() {\n    return (\n      <LayoutContainer>\n        <Navbar middle=\"PokéPlanner\" />\n        <Section title=\"PokéPlanner\" desc=\"Select and plan your party Pokémon\" />\n        <Section\n          title=\"PokéFight\"\n          desc=\"Find a Pokémon and see your party's winning chance against enemy party\"\n        />\n      </LayoutContainer>\n    );\n  }\n}\n\nfunction Section({title, desc}) {\n  return (\n    <SectionStyle>\n      <div style={{fontWeight: 'bold'}}>{title}</div>\n      <div>{desc}</div>\n      <PartyArea>\n        <Link to=\"/search\">Tap to add Pokémon to your party</Link>\n      </PartyArea>\n    </SectionStyle>\n  );\n}\n\nconst SectionStyle = styled.div`\n  margin: 24px 0;\n`;\n\nconst PartyArea = styled.div`\n  height: 160px;\n  margin: 8px 0;\n  background: lightgrey;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LayoutContainer = styled.div`\n  margin: 0 16px;\n`;\n","import wtf from 'wtf_wikipedia';\n\nconst DOMAIN = `https://m.bulbapedia.bulbagarden.net/w/api.php`;\nconst DEFAULT_PARAMS = {\n  origin: '*',\n  action: 'parse',\n  format: 'json',\n  redirects: 1,\n};\n\nexport async function fetchAndParseWiki(params) {\n  const { wikitext } = await fetchWiki({ ...params, prop: 'wikitext' });\n  return await wtf(wikitext['*']);\n}\n\nasync function fetchWiki(params) {\n  const queryParams = buildQueryParams(params);\n  const url = `${DOMAIN}?${queryParams}`;\n  const response =  await fetch(url).then(r => r.json())\n  return response.parse;\n}\n\nexport function buildQueryParams(params = {}) {\n  function buildKeyValueQueryFromObject(obj) {\n    return Object.keys(obj).map(key => `${key}=${obj[key]}`)\n  }\n  return [\n    ...buildKeyValueQueryFromObject(DEFAULT_PARAMS),\n    ...buildKeyValueQueryFromObject(params),\n  ].join('&');\n}\n","import { fetchAndParseWiki } from '../apiHelper';\nconst POKEMON_LIST_PAGE = `List_of_Pokémon_by_Kanto_Pokédex_number`;\n\nexport default async function getPokemons() {\n  // get all Kanto Pokemon (Pokemon Let's Go)\n  const wikitextResult = await fetchAndParseWiki({\n    page: POKEMON_LIST_PAGE,\n  });\n  return [].concat( // flatten arrays, combine all pokemons from all sections\n    ...wikitextResult.sections() // sections() will produce list of sections in page\n      .filter(i => i.depth === 2) // filter only sections with pokemon list\n      .map(section =>\n        // sections(str) will return content of section 'str'\n        wikitextResult.sections(section._title).json()\n          .templates\n          .filter(i => i.template === 'rdex') // exclude header\n          .map(({ list: [ kantoDex, nDex, name, typeCount, ...types ] } ) => ({\n            kantoDex,\n            isAlolan: nDex.slice(-1) === 'A',\n            name,\n            types,\n          }))\n      )\n  );\n}\n","import { fetchAndParseWiki } from '../apiHelper';\n\nexport default async function getPokemonDetail(name) {\n  const parsed = await fetchAndParseWiki({\n    page: name,\n  });\n  const summarySection = parsed.sections(\"\").json().infoboxes[0];\n  const {\n    type1, type2,\n    form2type1, form2type2,\n    lv100exp, ability1,\n  } = summarySection;\n  let types = [];\n  let learnsetSection = [];\n  const isAlolan = name.indexOf('Alolan_') !== -1;\n  if (isAlolan) {\n    name = name.replace('_',' '); // for alolans\n    learnsetSection = parsed.sections(`=${name}`).json().templates;\n    types = form2type2 ? [form2type1.text, form2type2.text] : [form2type1.text];\n  } else {\n    learnsetSection = parsed.sections('By leveling up').json().templates;\n    if (!learnsetSection) {\n      learnsetSection = parsed.sections(`=${name}`).json().templates;\n    }\n    types = type2 ? [type1.text, type2.text] : [type1.text];\n  }\n  // get learnset table\n  const learnset = learnsetSection\n    .filter(i => i.template === 'learnlist/level7');\n\n  return {\n    types,\n    learnset,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { IconButton } from '@material-ui/core';\nimport { Search, Close } from '@material-ui/icons';\nimport { TextInput } from '../../common/components';\n\nexport default class SearchInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n    };\n    this.textInput = {}; // will be used as textInput ref\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  onFocus() {\n    this.setState({ isFocused: true });\n  }\n\n  onBlur() {\n    this.setState({ isFocused: false });\n  }\n\n  render() {\n    const { isFocused } = this.state;\n    return (\n      <Container isFocused={isFocused}>\n        <IconButton aria-label=\"Search\" onClick={this.textInput.focus} >\n          <Search />\n        </IconButton>\n        <StyledTextInput\n          ref={e => (this.textInput = e)}\n          name=\"searchText\"\n          placeholder=\"Search…\"\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          {...this.props}\n        />\n        <StyledIconButton\n          onClick={this.textInput.clear}\n          aria-label=\"Clear\"\n        >\n          <Close />\n        </StyledIconButton>\n      </Container>\n    );\n  }\n}\n\nSearchInput.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  defaultValue: PropTypes.string,\n};\n\nSearchInput.defaultProps = {\n  onSubmit: () => {},\n  onChange: () => {},\n  defaultValue: '',\n  // keep onClear undefined\n};\n\nconst Container = styled.div`\n  display: flex;\n  margin-top: 12px;\n  border-radius: 8px;\n  box-shadow: 0 0 8px 8px rgba(182, 237, 255, 0.24), 0 0 0 2px rgba(32, 129, 255, 0.2);\n  border: solid 1px #b0ebff;\n  ${({ isFocused }) => isFocused\n    ? 'background-color: rgba(255, 255, 255, 0.5);'\n    : 'background-color: rgba(106, 171, 255, 0.24);'\n  }\n`;\n\nconst StyledTextInput = styled(TextInput)`\n  flex: 1;\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  z-index: 1;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navbar, LayoutContainer } from '../../common/components';\nimport SearchInput from './SearchInput';\n\nexport default function SearchPageLayout(props) {\n  return (\n    <LayoutContainer>\n      <Navbar>\n        Pokémove Finder\n        <SearchInput\n          onChange={props.onChange}\n          onSubmit={props.onSubmit}\n          placeholder=\"Search by Pokemon...\"\n        />\n      </Navbar>\n      {props.searchResultContent}\n    </LayoutContainer>\n  );\n}\n\nSearchPageLayout.propTypes = {\n  searchResultContent: PropTypes.node.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  color: white;\n  padding-top: 8px;\n`;\n\nexport const TypeBaloon = styled.div`\n  display: flex;\n  color: white;\n  text-transform: uppercase;\n  background-color: ${props => props.color};\n  font-size: 12px;\n  padding: 2px 8px 4px;\n  letter-spacing: -0.3px;\n  border-radius: 5px;\n  border: 2px solid rgba(255, 255, 255, 0.4);\n\n  &:not(first-child) {\n    margin-left: 4px;\n  }\n`;\n","export default function getTypeColor(type) {\n  switch (type.toLowerCase()) {\n    case 'normal': return '#A8A878';\n    case 'fire': return '#F08030';\n    case 'fighting': case 'fight': return '#C03028';\n    case 'water': return '#6890F0';\n    case 'flying': return '#A890F0';\n    case 'grass': return '#78C850';\n    case 'poison': return '#A040A0';\n    case 'electric': return '#F8D030';\n    case 'ground': return '#E0C068';\n    case 'psychic': return '#F85888';\n    case 'rock': return '#B8A038';\n    case 'ice': return '#98D8D8';\n    case 'bug': return '#A8B820';\n    case 'dragon': return '#7038F8';\n    case 'ghost': return '#705898';\n    case 'steel': return '#B8B8D0';\n    case 'fairy': return '#EE99AC';\n    default: return '#68A090'; // ??? type\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, TypeBaloon } from './Types.styled.js';\nimport getTypeColor from './pokemonTypeColor';\n\nexport default function Types({ types }) {\n  return (\n    <Container>\n      {types.map((type, index) => (\n        <TypeBaloon\n          key={index}\n          color={getTypeColor(type)}\n        >\n          {type}\n        </TypeBaloon>\n      ))}\n    </Container>\n  );\n}\n\nTypes.propTypes = {\n  types: PropTypes.arrayOf(\n    PropTypes.string.isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: inline-flex;\n`;\n\nexport const SpriteContainer = styled.div`\n  width: 72px;\n  height: 72px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const PokemonSprite = styled.img`\n  max-width: 72px;\n  max-height: 72px;\n`;\n\nexport const Texts = styled.div`\n  margin-left: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Name = styled.div`\n  color: ${props => props.titleColor || 'white'};\n  text-align: left;\n  line-height: 20px;\n`;\n","export default function getImageUrl(pokemonName, isAlolan) {\n  const baseUrl = 'https://projectpokemon.org/images';\n  let name = pokemonName.toLowerCase();\n  let spriteType = 'normal-sprite';\n  if (isAlolan) {\n    name += '-alola';\n  } else switch (name) {\n    case 'nidoran♂': name = 'nidoran_m'; break;\n    case 'nidoran♀': name = 'nidoran_f'; break;\n    case \"farfetch'd\": name = 'farfetchd'; break;\n    case 'mr. mime': name = 'mr._mime'; break;\n    case 'meltan':\n    case 'melmetal': spriteType = 'lgswitch-sprite';\n  }\n  return `${baseUrl}/${spriteType}/${name}.gif`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Types from '../Types';\nimport {\n  Container,\n  SpriteContainer,\n  PokemonSprite,\n  Texts,\n  Name,\n} from './PokemonInfo.styled.js';\nimport getImageUrl from './spriteApi';\n\nexport default function PokemonInfo({\n  name,\n  types,\n  titleColor,\n  isAlolan,\n}) {\n  return (\n    <Container>\n      <SpriteContainer>\n        <PokemonSprite\n          src={getImageUrl(name, isAlolan)}\n        />\n      </SpriteContainer>\n      <Texts>\n        <Name titleColor={titleColor}>{name}</Name>\n        <Types types={types} />\n      </Texts>\n    </Container>\n  );\n}\n\nPokemonInfo.propTypes = {\n  name: PropTypes.string.isRequired,\n  types: PropTypes.arrayOf(\n    PropTypes.string.isRequired\n  ).isRequired,\n  titleColor: PropTypes.string,\n  isAlolan: PropTypes.bool,\n};\n","import styled from 'styled-components';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nexport default styled(ButtonBase)`\n  width: 100%;\n  && {\n    border-radius: 9px 29px;\n    justify-content: left;\n  }\n`;\n","import styled from 'styled-components';\nimport Card from '../../common/components/Card';\n\nexport const ResultItem = styled(Card)`\n  font-size: 20px;\n  && {\n    background-color: rgba(32, 129, 255, 0.3);\n    box-shadow: 0 0 8px 10px rgba(182, 237, 255, 0.3);\n    border: solid 3px rgba(176, 235, 255, 0.8);\n    margin: 8px 0;\n    padding: 4px 8px;\n    :before {\n      content: \" \";\n      position: absolute;\n      top: -6px;\n      left: -6px;\n      right: -6px;\n      bottom: -6px;\n      border: 3px solid rgba(32, 129, 255, 0.3);\n      border-radius: 12px 32px;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PokemonInfo from '../../common/components/PokemonInfo';\nimport {\n  ResultItem,\n} from './SearchResultItem.styled.js';\n\nexport default function SearchResultItem({\n  listItem: { name, types, isAlolan },\n  onClick,\n}) {\n  return (\n    <ResultItem onClick={onClick}>\n      <PokemonInfo\n        name={name}\n        types={types}\n        isAlolan={isAlolan}\n      />\n    </ResultItem>\n  );\n}\n\nSearchResultItem.propTypes = {\n  listItem: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    types: PropTypes.arrayOf(\n      PropTypes.string.isRequired\n    ).isRequired,\n    isAlolan: PropTypes.bool,\n  }).isRequired,\n  onClick: PropTypes.func,\n};\n\nSearchResultItem.defaultProps = {\n  onClick: () => {},\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport SearchResultItem from './SearchResultItem';\n\nexport default function SearchResultList(props) {\n  return (\n    <StyledList>\n      {props.filteredList.map((listItem, index) => (\n        <SearchResultItem\n          listItem={listItem}\n          key={index}\n          onClick={() => props.onClickItem(index)}\n        />\n      ))}\n    </StyledList>\n  );\n}\n\nSearchResultList.propTypes = {\n  filteredList: PropTypes.array.isRequired,\n  onClickItem: PropTypes.func,\n};\n\nSearchResultList.defaultProps = {\n  onClickItem: () => {},\n};\n\nconst StyledList = styled(List)`\n  && {\n    margin-top: 16px;\n  }\n`;\n","export default function EmptyState() {\n  return 'Failed to connect to the network...';\n}\n","import React, { Component } from 'react';\nimport { LinearProgress } from '@material-ui/core';\nimport { filterAutocomplete } from '../../common/utilities/filter';\nimport { getPokemons } from '../../api';\nimport SearchPageLayout from './SearchPageLayout';\nimport SearchResultList from './SearchResultList';\nimport EmptyState from './EmptyState';\n\nexport default class SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonList: [],\n      searchText: '',\n      isLoading: true,\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onClickItem = this.onClickItem.bind(this);\n  }\n\n  componentDidMount() {\n    getPokemons()\n      .then(r => this.setState({ pokemonList: r }))\n      .catch(e => {\n        if (e.message === 'Network request failed') {\n          // do nothing, Error message will be rendered\n        } else console.error(e);\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  onSubmit(searchText) {\n    this.props.history.push(`/pokémon/${searchText}`);\n  }\n\n  onClickItem(filteredList, index) {\n    const selectedPokemon = filteredList[index];\n    const pokemonName = this.getResultItemName(selectedPokemon);\n    this.props.history.push(`/pokémon/${pokemonName}`);\n  }\n\n  getResultItemName(resultItem) {\n    if (resultItem.isAlolan) {\n      return `Alolan_${resultItem.name}`;\n    }\n    return resultItem.name;\n  }\n\n  render() {\n    const { pokemonList, searchText, isLoading } = this.state;\n    const filteredList = filterAutocomplete(\n      pokemonList,\n      searchText,\n      true,\n      this.getResultItemName\n    );\n    let searchResultContent;\n    if (isLoading) {\n      searchResultContent = <LinearProgress />;\n    } else if (pokemonList.length) {\n      searchResultContent = (\n        <SearchResultList\n          filteredList={filteredList}\n          onClickItem={index => this.onClickItem(filteredList, index)}\n        />\n      );\n    } else {\n      searchResultContent = <EmptyState />;\n    }\n    return (\n      <SearchPageLayout\n        onChange={searchText => this.setState({ searchText })}\n        onSubmit={this.onSubmit}\n        searchResultContent={searchResultContent}\n        {...this.props}\n      />\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\nimport { default as CollapseMaterialUi } from '@material-ui/core/Collapse';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Card from '../../common/components/Card';\n\nexport const MoveSetTab = styled.div`\n  margin-top: 16px;\n  font-weight: bold;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  position: relative;\n  :not(:last-child):before {\n    content: \" \";\n    position: absolute;\n    border: 2px solid black;\n    bottom: -17px;\n    top: 17px;\n    left: 14px;\n  }\n`;\n\nexport const Move = styled(Card)`\n  flex-direction: column;\n  text-align: left;\n  && {\n    background-image: linear-gradient(\n      white -64px,\n      ${props => lighten(0.1, props.color)} 32px\n    );\n    box-shadow: 0 0 8px 10px rgba(182, 237, 255, 0.3);\n    border: solid 3px rgba(176, 235, 255, 0.8);\n    margin: 12px 0;\n    padding: 12px 24px;\n    align-items: normal;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Level = styled.div`\n  min-width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: black;\n  font-size: 16px;\n  color: white;\n  margin: 16px 8px 0 0;\n  z-index: 1;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Name = styled.div`\n  font-size: 20px;\n  flex: 3;\n`;\n\nexport const Collapse = styled(CollapseMaterialUi)`\n  margin-top: 4px;\n`;\n\nexport const ExpandIcon = styled(ExpandMore)`\n  transition: transform 400ms;\n  transform: rotate(0deg);\n  &:hover {\n    transform: rotate(${props => props.isExpanded ? '180deg' : '180deg'});\n  }\n`;\n\nexport const ShowDetails = styled.div`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  font-size: 10px;\n  margin: 0 8px 5px 0;\n`;\n\nexport const ExpandIconContainer = styled.div`\n  transition: transform 400ms;\n  transform: rotate(${props => props.isExpanded ? '180deg' : '0deg'});\n  &:hover {\n  }\n`;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Types, { getTypeColor } from '../../common/components/Types';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport {\n  MoveSetTab,\n  Container,\n  Move,\n  Header,\n  Level,\n  Name,\n  Collapse,\n  // ExpandIcon,\n  ShowDetails,\n  ExpandIconContainer,\n} from './Learnset.styled';\n\nexport default function Learnset({ learnset }) {\n  return (\n    <Fragment>\n      <MoveSetTab>Moves by leveling up</MoveSetTab>\n        { learnset.map(({ list }, i) =>\n          <LearnsetItem key={i} list={list} />\n        )}\n    </Fragment>\n  );\n}\n\nLearnset.propTypes = {\n  learnset: PropTypes.arrayOf(\n    PropTypes.shape({\n      list: PropTypes.array.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nfunction LearnsetItem({ list }) {\n  function encodeDash(string) {\n    return string === '&mdash;' ? '-' : string;\n  }\n  function indicateStab(stabIndicator) {\n    switch (stabIndicator) {\n      case `''`: return 2; // get STAB after evolution\n      case `'''`: return 1; // get STAB\n      default: return 0;\n    }\n  }\n  const [isExpanded, setIsExpanded] = useState(false);\n  function toggleExpanded() {\n    setIsExpanded(!isExpanded);\n  }\n  const [\n    level,\n    moveName,\n    type,\n    category,\n    power,\n    accuracy,\n    pp,\n    _,\n    stabIndicator,\n  ] = list;\n  return (\n    <Container>\n      <Level>{level}</Level>\n      <Move\n        color={getTypeColor(type)}\n        onClick={toggleExpanded}\n      >\n        <Header>\n          <Name>{moveName}</Name>\n          <div>{category}</div>\n          {category !== 'Status' && <div>&nbsp;{encodeDash(power)}</div>}\n        </Header>\n        <Types types={[type]} />\n        <ShowDetails>\n          {isExpanded ? 'hide' : 'show'} details...\n          <ExpandIconContainer isExpanded={isExpanded}>\n            <ExpandMore/>\n          </ExpandIconContainer>\n        </ShowDetails>\n        <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit>\n          <div>\n            <div>Power: {encodeDash(power)}</div>\n            <div>Accuracy: {encodeDash(accuracy)}%</div>\n            <div>PP: {pp}</div>\n            <div>Type: {type}</div>\n            <div>Category: {category}</div>\n          </div>\n        </Collapse>\n      </Move>\n    </Container>\n  );\n}\n\nLearnsetItem.propTypes = {\n  list: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PokemonInfo from '../../common/components/PokemonInfo';\nimport Navbar from '../../common/components/Navbar';\nimport LayoutContainer from '../../common/components/LayoutContainer';\nimport Learnset from './Learnset';\n\nexport default function DetailPageLayout({\n  name,\n  types,\n  learnset,\n  onClickBack,\n  isAlolan,\n}) {\n  return (\n    <LayoutContainer>\n      <Navbar onClickBack={onClickBack}>\n        <PokemonInfo\n          name={name}\n          types={types}\n          isAlolan={isAlolan}\n          titleColor=\"black\"\n        />\n      </Navbar>\n      <Learnset learnset={learnset} />\n    </LayoutContainer>\n  );\n}\n\nDetailPageLayout.propTypes = {\n  name: PropTypes.string.isRequired,\n  types: PropTypes.arrayOf(\n    PropTypes.string.isRequired\n  ).isRequired,\n  isAlolan: PropTypes.bool,\n  learnset: PropTypes.arrayOf(\n    PropTypes.shape({\n      list: PropTypes.array.isRequired,\n    }).isRequired\n  ).isRequired,\n  onClickBack: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPokemonDetail } from '../../api';\nimport DetailPageLayout from './DetailPageLayout';\n\nexport default function DetailPageContainer({\n  match: { params },\n  history: { push },\n  // history: { goBack },\n}) {\n  const [ learnset, setLearnset ] = useState([]);\n  const [ types, setTypes ] = useState([]);\n  function onClickBack() {\n    push('/search');\n  }\n  const name = params.pokemon;\n  useEffect(() => {\n    getPokemonDetail(name)\n    .then(({ types, learnset }) => {\n      setTypes(types);\n      setLearnset(learnset);\n    });\n  }, [ params ]);\n  const alolanSeparatorIndex = name.indexOf('_');\n  let nameForAlolan = '';\n  if (alolanSeparatorIndex !== -1) {\n    nameForAlolan = name.substr(alolanSeparatorIndex + 1);\n  }\n  return (\n    <DetailPageLayout\n      name={nameForAlolan || name}\n      isAlolan={nameForAlolan !== ''}\n      types={types}\n      learnset={learnset}\n      onClickBack={onClickBack}\n    />\n  );\n}\n\nDetailPageContainer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      pokemon: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    // goBack: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Home from './pages/Home';\nimport Search from './pages/Search';\nimport Detail from './pages/Detail';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nexport default function App() {\n  return (\n    <Body>\n      <BrowserRouter>\n        <Switch>\n          <Route path='/search' component={Search}/>\n          <Route path='/pokémon/:pokemon' component={Detail}/>\n          {/* <Route path='/' component={Home}/> */}\n          <Route path='/' component={Search}/>\n          <Route component={NotFound}/>\n        </Switch>\n      </BrowserRouter>\n    </Body>\n  );\n}\n\nfunction NotFound() {\n  return (\n    <div>404 Not Found</div>\n  );\n}\n\nconst Body = styled.div`\n  overflow: scroll;\n  width: 100vw;\n  height: 100vh;\n  background-image:\n    repeating-linear-gradient(90deg,\n      transparent 0 10px,\n      rgba(0, 0, 121, 0.03) 12px 14px,\n      transparent 16px 26px\n    ),\n    repeating-linear-gradient(0deg,\n      transparent 0 10px,\n      rgba(0, 0, 121, 0.03) 12px 14px,\n      transparent 16px 26px\n    ),\n    radial-gradient(circle at 50% 0, #2cffff, #69fffe 35%, #008dee);\n  background-attachment: local;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}